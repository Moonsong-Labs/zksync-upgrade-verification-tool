name: Build / Test CLI & WebApp
on:
  push:
    branches:
      - "**"
env:
  FORCE_COLOR: 1
  ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
  NODE_OPTIONS: "--no-deprecation"
  ALLOW_INDEXING: false
  LOG_LEVEL: debug
  ETH_NETWORK: "mainnet"
  DATABASE_URL: postgresql://user:password@localhost:5432/webapp
  NODE_ENV: test
  L1_RPC_URL: ${{ secrets.TENDERLY_RPC_URL }}
  WALLET_CONNECT_PROJECT_ID: 00000000000000000000000000000000
  UPGRADE_HANDLER_ADDRESS: 0x9A6DE0f62Aa270A8bCB1e2610078650D539B1Ef9 # set to sepolia zkSync diamond just because it exists

jobs:
  cli-build-and-test:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    defaults:
      run:
        working-directory: ./cli
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm test:ci
      - name: Coverage
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ./cli/coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}

  webapp-start:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: |
          pnpm install
          pnpm build
      - name: Start DB
        run: |
          cd webapp
          ./scripts/init_db.sh
          docker ps -a
      - name: Start WebApp
        run: |
          cd webapp
          timeout 60s pnpm start | tee output.log &
          PID=$!
          if grep -q "ðŸš€  We have liftoff!" <(tail -f output.log); then
            echo "WebApp started successfully"
            kill $PID
          else
            echo "WebApp failed to start"
            exit 1
          fi
  webapp-integration-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm build
      - name: Run integration tests
        run: |
          cd webapp
          pnpm test:i

  webapp-unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm build
      - name: Run unit tests
        run: |
          cd webapp
          pnpm test:u
