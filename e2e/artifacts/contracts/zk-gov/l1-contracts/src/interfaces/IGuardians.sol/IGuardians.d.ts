// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface IGuardians$Type {
  _format: "hh-sol-artifact-1";
  contractName: "IGuardians";
  sourceName: "contracts/zk-gov/l1-contracts/src/interfaces/IGuardians.sol";
  abi: [
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "_id";
          type: "bytes32";
        },
        {
          internalType: "address[]";
          name: "_signers";
          type: "address[]";
        },
        {
          internalType: "bytes[]";
          name: "_signatures";
          type: "bytes[]";
        },
      ];
      name: "approveUpgradeGuardians";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          components: [
            {
              internalType: "address[]";
              name: "targets";
              type: "address[]";
            },
            {
              internalType: "uint256[]";
              name: "values";
              type: "uint256[]";
            },
            {
              internalType: "bytes[]";
              name: "calldatas";
              type: "bytes[]";
            },
            {
              internalType: "string";
              name: "description";
              type: "string";
            },
          ];
          internalType: "struct IGuardians.L2GovernorProposal";
          name: "_l2Proposal";
          type: "tuple";
        },
        {
          components: [
            {
              internalType: "address";
              name: "to";
              type: "address";
            },
            {
              internalType: "uint256";
              name: "l2GasLimit";
              type: "uint256";
            },
            {
              internalType: "uint256";
              name: "l2GasPerPubdataByteLimit";
              type: "uint256";
            },
            {
              internalType: "address";
              name: "refundRecipient";
              type: "address";
            },
            {
              internalType: "uint256";
              name: "txMintValue";
              type: "uint256";
            },
          ];
          internalType: "struct IGuardians.TxRequest";
          name: "_txRequest";
          type: "tuple";
        },
        {
          internalType: "address[]";
          name: "_signers";
          type: "address[]";
        },
        {
          internalType: "bytes[]";
          name: "_signatures";
          type: "bytes[]";
        },
      ];
      name: "cancelL2GovernorProposal";
      outputs: [];
      stateMutability: "payable";
      type: "function";
    },
    {
      inputs: [
        {
          internalType: "bytes32";
          name: "_id";
          type: "bytes32";
        },
        {
          internalType: "address[]";
          name: "_signers";
          type: "address[]";
        },
        {
          internalType: "bytes[]";
          name: "_signatures";
          type: "bytes[]";
        },
      ];
      name: "extendLegalVeto";
      outputs: [];
      stateMutability: "nonpayable";
      type: "function";
    },
    {
      inputs: [
        {
          components: [
            {
              internalType: "address[]";
              name: "targets";
              type: "address[]";
            },
            {
              internalType: "uint256[]";
              name: "values";
              type: "uint256[]";
            },
            {
              internalType: "bytes[]";
              name: "calldatas";
              type: "bytes[]";
            },
            {
              internalType: "string";
              name: "description";
              type: "string";
            },
          ];
          internalType: "struct IGuardians.L2GovernorProposal";
          name: "_l2Proposal";
          type: "tuple";
        },
      ];
      name: "hashL2Proposal";
      outputs: [
        {
          internalType: "uint256";
          name: "proposalId";
          type: "uint256";
        },
      ];
      stateMutability: "pure";
      type: "function";
    },
    {
      inputs: [
        {
          components: [
            {
              internalType: "address[]";
              name: "targets";
              type: "address[]";
            },
            {
              internalType: "uint256[]";
              name: "values";
              type: "uint256[]";
            },
            {
              internalType: "bytes[]";
              name: "calldatas";
              type: "bytes[]";
            },
            {
              internalType: "string";
              name: "description";
              type: "string";
            },
          ];
          internalType: "struct IGuardians.L2GovernorProposal";
          name: "_l2Proposal";
          type: "tuple";
        },
        {
          components: [
            {
              internalType: "address";
              name: "to";
              type: "address";
            },
            {
              internalType: "uint256";
              name: "l2GasLimit";
              type: "uint256";
            },
            {
              internalType: "uint256";
              name: "l2GasPerPubdataByteLimit";
              type: "uint256";
            },
            {
              internalType: "address";
              name: "refundRecipient";
              type: "address";
            },
            {
              internalType: "uint256";
              name: "txMintValue";
              type: "uint256";
            },
          ];
          internalType: "struct IGuardians.TxRequest";
          name: "_txRequest";
          type: "tuple";
        },
        {
          internalType: "address[]";
          name: "_signers";
          type: "address[]";
        },
        {
          internalType: "bytes[]";
          name: "_signatures";
          type: "bytes[]";
        },
      ];
      name: "proposeL2GovernorProposal";
      outputs: [];
      stateMutability: "payable";
      type: "function";
    },
  ];
  bytecode: "0x";
  deployedBytecode: "0x";
  linkReferences: {};
  deployedLinkReferences: {};
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "IGuardians",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IGuardians$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/zk-gov/l1-contracts/src/interfaces/IGuardians.sol:IGuardians",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<IGuardians$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "IGuardians",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IGuardians$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/zk-gov/l1-contracts/src/interfaces/IGuardians.sol:IGuardians",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<IGuardians$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "IGuardians",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IGuardians$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/zk-gov/l1-contracts/src/interfaces/IGuardians.sol:IGuardians",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<IGuardians$Type["abi"]>>;
}
